-- MySQL Script generated by MySQL Workbench
-- Mon Nov 27 15:02:58 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`tipo_embalagem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tipo_embalagem` (
  `tipo_emb` VARCHAR(10) NOT NULL,
  `descricao_tipo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`tipo_emb`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`produto` (
  `codigo_prod` VARCHAR(10) NOT NULL,
  `nome_produto` VARCHAR(75) NOT NULL,
  `tipo_emb_fk` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`codigo_prod`),
  INDEX `tipo_emb_fk_idx` (`tipo_emb_fk` ASC) VISIBLE,
  CONSTRAINT `tipo_emb_fk`
    FOREIGN KEY (`tipo_emb_fk`)
    REFERENCES `mydb`.`tipo_embalagem` (`tipo_emb`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`estoque` (
  `id_estoque` INT NOT NULL,
  `data_estoque` DATE NOT NULL,
  `quantidade` INT NOT NULL,
  `cod_produtofk` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id_estoque`),
  INDEX `cod_produtofk_idx` (`cod_produtofk` ASC) VISIBLE,
  CONSTRAINT `cod_produtofk`
    FOREIGN KEY (`cod_produtofk`)
    REFERENCES `mydb`.`produto` (`codigo_prod`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`pedido` (
  `id_pedido` INT NOT NULL,
  `data_pedido` DATE NOT NULL,
  `quantidade_ped` INT NOT NULL,
  `cod_produtofk` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id_pedido`),
  INDEX `cod_produtofk_idx` (`cod_produtofk` ASC) VISIBLE,
  CONSTRAINT `cod_produtofk`
    FOREIGN KEY (`cod_produtofk`)
    REFERENCES `mydb`.`produto` (`codigo_prod`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cliente` (
  `cod_cliente` INT NOT NULL,
  `nome_fantasia` VARCHAR(40) NOT NULL,
  `razao_social` VARCHAR(65) NOT NULL,
  `idestoque_fk` INT NOT NULL,
  `idpedido_fk` INT NOT NULL,
  PRIMARY KEY (`cod_cliente`),
  INDEX `idestoque_fk_idx` (`idestoque_fk` ASC) VISIBLE,
  INDEX `idpedido_fk_idx` (`idpedido_fk` ASC) VISIBLE,
  CONSTRAINT `idestoque_fk`
    FOREIGN KEY (`idestoque_fk`)
    REFERENCES `mydb`.`estoque` (`id_estoque`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idpedido_fk`
    FOREIGN KEY (`idpedido_fk`)
    REFERENCES `mydb`.`pedido` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`representante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`representante` (
  `codigo_rep` INT NOT NULL,
  `nome_rep` VARCHAR(40) NOT NULL,
  `codigo_clientefk` INT NOT NULL,
  PRIMARY KEY (`codigo_rep`),
  INDEX `fk_representante_cliente1_idx` (`codigo_clientefk` ASC) VISIBLE,
  CONSTRAINT `fk_representante_cliente1`
    FOREIGN KEY (`codigo_clientefk`)
    REFERENCES `mydb`.`cliente` (`cod_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `mydb`.`tipo_embalagem`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`tipo_embalagem` (`tipo_emb`, `descricao_tipo`) VALUES ('FD1', 'FARDO C/ 8x1KG');
INSERT INTO `mydb`.`tipo_embalagem` (`tipo_emb`, `descricao_tipo`) VALUES ('FD3', 'FARDO C/ 5x3KG');
INSERT INTO `mydb`.`tipo_embalagem` (`tipo_emb`, `descricao_tipo`) VALUES ('SC10', 'SACO 10,1KG');
INSERT INTO `mydb`.`tipo_embalagem` (`tipo_emb`, `descricao_tipo`) VALUES ('SC15', 'SACO 15KG');
INSERT INTO `mydb`.`tipo_embalagem` (`tipo_emb`, `descricao_tipo`) VALUES ('SC20', 'SACO 20KG');
INSERT INTO `mydb`.`tipo_embalagem` (`tipo_emb`, `descricao_tipo`) VALUES ('CX12X85', 'CAIXA C/ 12x85G');
INSERT INTO `mydb`.`tipo_embalagem` (`tipo_emb`, `descricao_tipo`) VALUES ('CX12X100', 'CAIXA C/ 12x100G');
INSERT INTO `mydb`.`tipo_embalagem` (`tipo_emb`, `descricao_tipo`) VALUES ('CX20X60', 'CAIXA C/ 20x60G');
INSERT INTO `mydb`.`tipo_embalagem` (`tipo_emb`, `descricao_tipo`) VALUES ('CX10X400', 'CAIXA C/ 10x400G');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`produto`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`produto` (`codigo_prod`, `nome_produto`, `tipo_emb_fk`) VALUES ('SDC10', 'SPECIAL DOG CARNE ADULTOS 10.1KG', 'SC10');
INSERT INTO `mydb`.`produto` (`codigo_prod`, `nome_produto`, `tipo_emb_fk`) VALUES ('SDC15', 'SPECIAL DOG CARNE 15KG', 'SC15');
INSERT INTO `mydb`.`produto` (`codigo_prod`, `nome_produto`, `tipo_emb_fk`) VALUES ('SDC20', 'SPECIAL DOG CARNE 20KG', 'SC20');
INSERT INTO `mydb`.`produto` (`codigo_prod`, `nome_produto`, `tipo_emb_fk`) VALUES ('SDV10', 'SPECIAL DOG VEGETAIS ADULTOS 10,1KG', 'SC10');
INSERT INTO `mydb`.`produto` (`codigo_prod`, `nome_produto`, `tipo_emb_fk`) VALUES ('SDV15', 'SPECIAL DOG VEGETAIS ADULTOS 15KG', 'SC15');
INSERT INTO `mydb`.`produto` (`codigo_prod`, `nome_produto`, `tipo_emb_fk`) VALUES ('SDV20', 'SPECIAL DOG VEGETAIS ADULTOS 20KG', 'SC20');
INSERT INTO `mydb`.`produto` (`codigo_prod`, `nome_produto`, `tipo_emb_fk`) VALUES ('SDUARPCA3', 'SPECIAL DOG ULTRALIFE ADULTOS RAÃ‡AS PEQUENAS CORDEIRO E ARROZ 3KG', 'FD3');
INSERT INTO `mydb`.`produto` (`codigo_prod`, `nome_produto`, `tipo_emb_fk`) VALUES ('SCPASA1', 'SPECIAL CAT PRIME ADULTOS SALMAO E ARROZ 1KG', 'FD1');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`estoque`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`estoque` (`id_estoque`, `data_estoque`, `quantidade`, `cod_produtofk`) VALUES (1, '2023-10-10', 2, 'SDC10');
INSERT INTO `mydb`.`estoque` (`id_estoque`, `data_estoque`, `quantidade`, `cod_produtofk`) VALUES (2, '2023-10-20', 15, 'SDC10');
INSERT INTO `mydb`.`estoque` (`id_estoque`, `data_estoque`, `quantidade`, `cod_produtofk`) VALUES (3, '2023-10-20', 5, 'SDV15');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`pedido`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`pedido` (`id_pedido`, `data_pedido`, `quantidade_ped`, `cod_produtofk`) VALUES (1, '2023-10-10', 30, 'SDC10');
INSERT INTO `mydb`.`pedido` (`id_pedido`, `data_pedido`, `quantidade_ped`, `cod_produtofk`) VALUES (1, '2023-10-10', 4, 'SDV15');
INSERT INTO `mydb`.`pedido` (`id_pedido`, `data_pedido`, `quantidade_ped`, `cod_produtofk`) VALUES (2, '2023-10-20', 1, 'SDUACA1');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`cliente`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`cliente` (`cod_cliente`, `nome_fantasia`, `razao_social`, `idestoque_fk`, `idpedido_fk`) VALUES (000001, 'AGRO CLIENTE TESTE', 'CLIENTE TESTE 1', DEFAULT, DEFAULT);
INSERT INTO `mydb`.`cliente` (`cod_cliente`, `nome_fantasia`, `razao_social`, `idestoque_fk`, `idpedido_fk`) VALUES (000002, 'SUPERMERCADO TESTE', 'CLIENTE TESTE 2', DEFAULT, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`representante`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`representante` (`codigo_rep`, `nome_rep`, `codigo_clientefk`) VALUES (51, 'Matheus Meletto', DEFAULT);

COMMIT;

